version: '3.7'

###
# Make HAProxy in another stack because SQL servers need to be setup before it starts!!!!
###
services:
  haproxy:
    image: haproxy:2.0.5
    ports:
      - 3306:3306
      - 8081:8081
    networks:
      - db-net
    volumes:
      - ../confs/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    deploy:
      mode: replicated
      replicas: 3
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  sql-srv0:
    image: mariadb:10.4
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mariadb-root-passwd
    secrets:
      - mariadb-root-passwd
    ports:
      - 33061:3306
    networks:
      db-net:
        ipv4_address: 172.20.0.11
    volumes:
      - ../confs/sql/srv0/mariadb-replication.cnf:/etc/mysql/mariadb.conf.d/mariadb-replication.cnf
      - ../confs/sql/srv0/init.sql:/docker-entrypoint-initdb.d/init.sql
      - type: volume
        source: sql-srv0-data
        target: /var/lib/mysql
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
          - node.hostname == m0
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  sql-srv1:
    image: mariadb:10.4
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mariadb-root-passwd
    secrets:
      - mariadb-root-passwd
    ports:
      - 33062:3306
    networks:
      db-net:
        ipv4_address: 172.20.0.12
    volumes:
      - ../confs/sql/srv1/mariadb-replication.cnf:/etc/mysql/mariadb.conf.d/mariadb-replication.cnf
      - ../confs/sql/srv1/init.sql:/docker-entrypoint-initdb.d/init.sql
      - type: volume
        source: sql-srv1-data
        target: /var/lib/mysql
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
          - node.hostname == m1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  sql-srv2:
    image: mariadb:10.4
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mariadb-root-passwd
    secrets:
      - mariadb-root-passwd
    ports:
      - 33063:3306
    networks:
      db-net:
        ipv4_address: 172.20.0.13
    volumes:
      - ../confs/sql/srv2/mariadb-replication.cnf:/etc/mysql/mariadb.conf.d/mariadb-replication.cnf
      - ../confs/sql/srv2/init.sql:/docker-entrypoint-initdb.d/init.sql
      - type: volume
        source: sql-srv2-data
        target: /var/lib/mysql
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
          - node.hostname == m2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

networks:
  db-net:
    driver: overlay
    name: db-net
    ipam:
      config:
        - subnet: 172.20.0.0/24

secrets:
   mariadb-root-passwd:
     file: ../secrets/databases/sql/mariadb-root-passwd.txt

volumes:
  sql-srv0-data:
    driver: local
    name: sql-srv0-data
    driver_opts:
      type: nfs
      o: addr=192.168.1.200,rw,nolock
      device: :/mnt/nfs/data/sql/srv0

  sql-srv1-data:
    driver: local
    name: sql-srv1-data
    driver_opts:
      type: nfs
      o: addr=192.168.1.200,rw,nolock
      device: :/mnt/nfs/data/sql/srv1

  sql-srv2-data:
    driver: local
    name: sql-srv2-data
    driver_opts:
      type: nfs
      o: addr=192.168.1.200,rw,nolock
      device: :/mnt/nfs/data/sql/srv2
